{"version":3,"file":"popup.js","mappings":";;;;;;;;;;;AAAA;;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;ACNA;;AAEa;;AAEQ;;AAErB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAM,2CAA2C;AACjD,MAAM,iCAAiC;;AAEvC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL,GAAG;;AAEH;AACA;AACA,CAAC","sources":["webpack://webwise/./src/popup.css?b447","webpack://webwise/webpack/bootstrap","webpack://webwise/webpack/runtime/make namespace object","webpack://webwise/./src/popup.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport {};","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// popup.js\n\n'use strict';\n\nimport './popup.css';\n\n(function () {\n  // Elements\n  const modelSelect = document.getElementById('modelSelect');\n  const openaiApiKeyInput = document.getElementById('openaiApiKey');\n  const includeContextCheckbox = document.getElementById('includeContext');\n  const saveSettingsBtn = document.getElementById('saveSettingsBtn');\n  const statusMessage = document.getElementById('statusMessage');\n\n  // Model options for OpenAI\n  const modelOptions = [\n    { value: 'gpt-4o-mini', text: 'GPT-4o Mini' },\n    { value: 'gpt-4o', text: 'GPT-4o' },\n\n  ];\n\n  // Initialize the popup\n  function init() {\n    // Populate model select\n    modelSelect.innerHTML = '';\n    modelOptions.forEach((model) => {\n      const option = document.createElement('option');\n      option.value = model.value;\n      option.text = model.text;\n      modelSelect.appendChild(option);\n    });\n\n    // Load settings from storage\n    chrome.storage.local.get(['openaiApiKey', 'openaiModel', 'includeContext'], (result) => {\n      openaiApiKeyInput.value = result.openaiApiKey || '';\n      includeContextCheckbox.checked = result.includeContext || false;\n      modelSelect.value = result.openaiModel || modelOptions[0].value;\n    });\n  }\n\n  // Handle save settings\n  saveSettingsBtn.addEventListener('click', () => {\n    const model = modelSelect.value;\n    const openaiApiKey = openaiApiKeyInput.value.trim();\n    const includeContext = includeContextCheckbox.checked;\n\n    const settings = {\n      openaiModel: modelOptions.find((m) => m.value === model)?.value || '',\n      openaiApiKey: openaiApiKey,\n      includeContext: includeContext,\n    };\n\n    chrome.storage.local.set(settings, () => {\n      statusMessage.textContent = 'Settings saved successfully!';\n      setTimeout(() => {\n        statusMessage.textContent = '';\n      }, 3000);\n    });\n  });\n\n  // Initialize on DOMContentLoaded\n  document.addEventListener('DOMContentLoaded', init);\n})();\n"],"names":[],"sourceRoot":""}